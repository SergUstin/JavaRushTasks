taskKey="com.javarush.task.task37.task3702.big02"\n\nФабрики (2)

1. Создай публичный класс MaleFactory в пакете male с публичным методом getPerson, который принимает один параметр int age (возраст) и
возвращает нужный объект одного из классов, реализующих интерфейс Human.

2. Логика метода getPerson: используя константу MAX_AGE определи, какой класс соответствует переданному возрасту.
Например, age=4 соответствует мальчику (KidBoy), age=15 - подростку (TeenBoy), остальной возраст - взрослому мужчине.

3. В методе main класса Solution создай фабрику и вызови у нее метод getPerson три раза с такими параметрами: 99, 4, 15.
Выведи результат в консоль.
Вывод должен быть следующий:
Man{}
KidBoy{}
TeenBoy{}

Молодец, Фабрика готова! Это паттерн Factory Method.


Требования:
1.	Класс MaleFactory должен быть создан в пакете male.
2.	Для возрастов больше 19 лет метод getPerson должен возвращать объект типа Man.
3.	Для возрастов больше 12 лет, но меньше 20, метод getPerson должен возвращать объект типа TeenBoy.
4.	Для возрастов меньше 13 лет, метод getPerson должен возвращать объект типа KidBoy.
5.	В методе main класса Solution у MaleFactory должен быть вызван трижды метод getPerson с параметрами 99, 4, 15.
6.	Вывод на экран должен соответствовать условию задачи.


Фабрики (2)

Привет!
Сейчас ты будешь разбираться с паттерном Factory Method. Возьмем пример с людьми.
Будем определять, к какому типу относится человек в зависимости от его возраста.

В этом задании подготовим данные, которые будем использовать в фабрике.

1. Для всех типов людей создай общий интерфейс Human.

2. Будем делать Factory для мужчин. Для этого создай пакет male, в котором создай классы KidBoy, TeenBoy, Man.
Во всех этих классах реализуй интерфейс Human.

3. В каждом классе KidBoy, TeenBoy создай свою публичную константу MAX_AGE с соответствующими значениями: 12, 19.

4. Сгенерируй автоматические методы toString для каждого класса KidBoy, TeenBoy, Man. Получится &quot;KidBoy{}&quot; и т.п.

5. Создай класс Solution с методом main.



