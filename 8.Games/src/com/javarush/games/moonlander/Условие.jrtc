taskKey="com.javarush.games.moonlander.part01"\n\nИгра Moon Lander (1/23)

Сегодня мы предлагаем тебе написать увлекательную игру &mdash; Moon Lander. Как всегда, начнем с правил.
Цель &ndash; опустить посадочный модуль на лунную поверхность. Для этого игроку нужно преодолеть притяжение Луны,
используя кормовой ускоритель для замедления падения и боковые ускорители для перемещения корабля влево или вправо.
Рельеф у местности ухабистый, и есть всего одна плоская область для мягкой посадки &mdash; &laquo;платформа&raquo;. Если игрок успешно совершает посадку, он выигрывает.
Количество очков зависит от длительности посадки: чем дольше игрок совершает посадку, тем меньше очков он получит в итоге. Игра окончена, когда игрок разбивается
о поверхность Луны. Итак, начнем с главного класса игры MoonLanderGame. Унаследуем его от класса Game. Этот класс, как ты помнишь, содержит в себе методы,
которые помогут нам в реализации игры.
Теперь реализуем игровое поле. Для этого нам необходимо переопределить метод initialize(), в котором, в свою очередь, нужно вызвать метод setScreenSize(int, int).
Этот метод задает ширину и высоту игрового поля, которые он принимает в качестве параметров. Их будем хранить в переменных.


Требования:
1.	Должен существовать публичный класс MoonLanderGame.
2.	Класс MoonLanderGame должен быть наследником класса Game.
3.	В классе MoonLanderGame должно существовать публичное статическое final int поле WIDTH, при объявлении проинициализированное значением 64.
4.	В классе MoonLanderGame должно существовать публичное статическое final int поле HEIGHT, при объявлении проинициализированное значением 64.
5.	В классе MoonLanderGame должен быть переопределен метод initialize() родительского класса Game.
6.	В методе initialize() должен быть вызван метод setScreenSize(int, int) класса Game c параметрами WIDTH и HEIGHT.
7.	В классе MoonLanderGame должен быть импорт всего содержимого пакета com.javarush.engine.cell.


