taskKey="com.javarush.games.moonlander.part12"\n\nИгра Moon Lander (12/23)

Как ты заметил, после отпускания клавиши движения влево или вправо ракета сразу прекращает движение, а нужно
чтобы она продолжала движение по инерции. Чтобы реализовать это, будем использовать переменную slowdown,
которая отвечает за замедление ракеты. Если мы отпускаем клавиши движения вправо или влево, в методе move
значение speedX ракеты будет плавно уменьшаться на значение slowdown, пока не достигнет 0.


Требования:
1.	В классе Rocket должно существовать приватное поле slowdown типа double, проинициализированное при объявлении значением boost / 10.
2.	В методе move(boolean, boolean, boolean) полю speedX должно устанавливаться значение 0, если параметр метода isLeftPressed равен false и параметр метода isRightPressed равен false и значение поля speedX находится в диапазоне от (-slowdown) до slowdown включительно.
3.	В методе move(boolean, boolean, boolean) поле speedX должно уменьшаться на значение slowdown, если параметр метода isLeftPressed равен false, параметр метода isRightPressed равен false и значение поля speedX больше значения slowdown.
4.	В методе move(boolean, boolean, boolean) поле speedX должно увеличиваться на значение slowdown, если параметр метода isLeftPressed равен false, параметр метода isRightPressed равен false и значение поля speedX меньше значения (-slowdown).
5.	В методе move(boolean, boolean, boolean) поле x должно быть увеличено на значение speedX после того, как поле speedX было изменено, и до вызова метода checkBorders().


Игра Moon Lander (12/23)

На данный момент ракета может улетать за пределы игрового поля. Давай это исправим. Создадим специальный метод, в котором будем
проверять достижение ракетой границ экрана: левой, правой и верхней. Если ракета достигает одну из указанных границ, возвращаем
ее в пределы игрового поля. Этот метод нужно вызывать в методе move последним действием.
Достижение ракетой нижней границы экрана проверять не нужно, так как там находится ландшафт. Проверку
на пересечение с ландшафтом мы сделаем позже.



Игра Moon Lander (12/23)

Продолжим реализацию движения ракеты. Она должна двигаться и по вертикали, и по горизонтали.
Давай внесем соответствующие изменения в метод move: теперь он будет принимать в качестве параметров состояния
нажатия клавиш. Первый параметр &mdash; это isUpPressed, второй &mdash; isLeftPressed, третий &mdash; isRightPressed.
Для установки скорости движения по оси X создадим переменную speedX. Значение этой переменной, как и
speedY, будет изменяться в методе move в зависимости от нажатых клавиш. Также не забудь об изменении самих
координат(x и y).



Игра Moon Lander (12/23)

На этом этапе займемся реализацией методов onKeyPress и onKeyReleased. Как ты мог понять из названия, метод onKeyPress
вызывается при нажатии любой клавиши, а метод onKeyReleased при отпускании. Перейдем к реализации метода onKeyPress. Он должен
обрабатывать нажатия клавиш вверх, влево и вправо и выставлять флагам (полям) соответствующие значения. Учти, что при нажатии
клавиши влево нужно установить значение false флагу isRightPressed, и наоборот. Кроме того, не забудь сбрасывать
соответствующие флаги при отпускании клавиш в методе onKeyReleased.



Игра Moon Lander (12/23)

Продолжим реализовывать движение ракеты. Давай добавим поля, которые будут ответственны за состояние клавиш,
благодаря которым мы перемещаем ракету по экрану. Эти поля будут принимать только два значения: true, если клавиша нажата, иначе false.
Для управления ракетой нам понадобится всего три клавиши: вверх, влево и вправо. За нажатие клавиши вверх будет
отвечать поле isUpPressed, влево &mdash; isLeftPressed, вправо &mdash; isRightPressed. В начале игры эти поля должны быть в
состоянии false, так как ни одна клавиша еще не нажата. Реализацией движения мы займемся в следующих частях.



Игра Moon Lander (12/23)

Давай займемся реализацией движения ракеты. Для начала создадим метод move() и в нем реализуем свободное падение.
Падение должно происходить с ускорением, то есть нам нужно постоянно увеличивать его скорость. За скорость движения
по оси Y будет отвечать переменная speedY, а увеличивать ее на каждом шаге игры мы будем на величину boost. Все действия,
которые происходят на каждом шаге, необходимо выполнять в методе onTurn(int). Чтобы задать частоту работы этого метода, мы
будем использовать метод setTurnTimer. Он принимает на вход параметр &mdash; длительность каждого шага в миллисекундах.
Если ты все сделал правильно, запустив программу, ты увидишь падение ракеты.
Обрати внимание: после того, как ракета &quot;уходит&quot; за пределы экрана, мы получаем много исключений.
Это происходит потому, что игровой движок пытается отрисовать ее
по несуществующим координатам. Давай это починим. Переопредели метод setCellColor и реализуй его так, чтобы метод
суперкласса вызывался только для корректных координат.



