taskKey="com.javarush.games.moonlander.part11"\n\nИгра Moon Lander (11/23)

На данный момент ракета может улетать за пределы игрового поля. Давай это исправим. Создадим специальный метод, в котором будем
проверять достижение ракетой границ экрана: левой, правой и верхней. Если ракета достигает одну из указанных границ, возвращаем
ее в пределы игрового поля. Этот метод нужно вызывать в методе move последним действием.
Достижение ракетой нижней границы экрана проверять не нужно, так как там находится ландшафт. Проверку
на пересечение с ландшафтом мы сделаем позже.


Требования:
1.	В классе Rocket должен существовать приватный метод void checkBorders().
2.	В методе checkBorders(), если значение поля x меньше нуля, установи ему значение 0.
3.	В методе checkBorders(), если значение поля x меньше нуля, установи полю speedX значение 0.
4.	В методе checkBorders(), если сумма значений полей x и width больше ширины игрового поля MoonLanderGame.WIDTH, установи полю x значение (MoonLanderGame.WIDTH - width).
5.	В методе checkBorders(), если сумма значений полей x и width больше ширины игрового поля MoonLanderGame.WIDTH, установи полю speedX значение 0.
6.	В методе checkBorders(), если значение поля y меньше нуля, установи ему значение 0.
7.	В методе checkBorders(), если значение поля y меньше нуля, установи полю speedY значение 0.
8.	Метод move(boolean, boolean, boolean) должен вызывать метод checkBorders() последним действием.


Игра Moon Lander (11/23)

Продолжим реализацию движения ракеты. Она должна двигаться и по вертикали, и по горизонтали.
Давай внесем соответствующие изменения в метод move: теперь он будет принимать в качестве параметров состояния
нажатия клавиш. Первый параметр &mdash; это isUpPressed, второй &mdash; isLeftPressed, третий &mdash; isRightPressed.
Для установки скорости движения по оси X создадим переменную speedX. Значение этой переменной, как и
speedY, будет изменяться в методе move в зависимости от нажатых клавиш. Также не забудь об изменении самих
координат(x и y).



Игра Moon Lander (11/23)

На этом этапе займемся реализацией методов onKeyPress и onKeyReleased. Как ты мог понять из названия, метод onKeyPress
вызывается при нажатии любой клавиши, а метод onKeyReleased при отпускании. Перейдем к реализации метода onKeyPress. Он должен
обрабатывать нажатия клавиш вверх, влево и вправо и выставлять флагам (полям) соответствующие значения. Учти, что при нажатии
клавиши влево нужно установить значение false флагу isRightPressed, и наоборот. Кроме того, не забудь сбрасывать
соответствующие флаги при отпускании клавиш в методе onKeyReleased.



Игра Moon Lander (11/23)

Продолжим реализовывать движение ракеты. Давай добавим поля, которые будут ответственны за состояние клавиш,
благодаря которым мы перемещаем ракету по экрану. Эти поля будут принимать только два значения: true, если клавиша нажата, иначе false.
Для управления ракетой нам понадобится всего три клавиши: вверх, влево и вправо. За нажатие клавиши вверх будет
отвечать поле isUpPressed, влево &mdash; isLeftPressed, вправо &mdash; isRightPressed. В начале игры эти поля должны быть в
состоянии false, так как ни одна клавиша еще не нажата. Реализацией движения мы займемся в следующих частях.



Игра Moon Lander (11/23)

Давай займемся реализацией движения ракеты. Для начала создадим метод move() и в нем реализуем свободное падение.
Падение должно происходить с ускорением, то есть нам нужно постоянно увеличивать его скорость. За скорость движения
по оси Y будет отвечать переменная speedY, а увеличивать ее на каждом шаге игры мы будем на величину boost. Все действия,
которые происходят на каждом шаге, необходимо выполнять в методе onTurn(int). Чтобы задать частоту работы этого метода, мы
будем использовать метод setTurnTimer. Он принимает на вход параметр &mdash; длительность каждого шага в миллисекундах.
Если ты все сделал правильно, запустив программу, ты увидишь падение ракеты.
Обрати внимание: после того, как ракета &quot;уходит&quot; за пределы экрана, мы получаем много исключений.
Это происходит потому, что игровой движок пытается отрисовать ее
по несуществующим координатам. Давай это починим. Переопредели метод setCellColor и реализуй его так, чтобы метод
суперкласса вызывался только для корректных координат.



Игра Moon Lander (11/23)

Ракета у нас уже есть, теперь займемся отрисовкой ландшафта. Его матрицу мы сделали для тебя: ты ее найдешь
в классе ShapeMatrix. Ландшафт &mdash; это тоже игровой объект, поэтому создадим метод, который будет отвечать за инициализацию подобных объектов.
В нем будут создаваться ландшафт и ракета.
Как ты заметил, на экране есть сетка. С одной стороны, она помогает эффективнее работать с игровым полем,
а с другой &mdash; мешает игровому процессу, поэтому на данном
этапе мы ее скроем. В дальнейшем ты сможешь ее включать, если тебе это понадобится при разработке.



