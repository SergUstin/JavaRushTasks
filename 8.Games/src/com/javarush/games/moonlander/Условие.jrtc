taskKey="com.javarush.games.moonlander.part02"\n\nИгра Moon Lander (2/23)

На данном этапе давай создадим метод drawScene(). В нем мы окрасим все ячейки игрового поля в один цвет.
В этом нам поможет метод setCellColor(int, int, Color) класса Game, параметры которого &mdash; координаты и цвет ячейки.
Вызовем его со всеми координатами от 0 до WIDTH и от 0 до HEIGHT и любым цветом (например, Color.ORANGE).

Также нам понадобится метод createGame(). Он будет отвечать за создание игры.
Но сейчас мы вызовем в нем только метод отрисовки drawScene().
Сам метод createGame() вызовем в методе initialize() после вызова setScreenSize(int, int).


Требования:
1.	В классе MoonLanderGame должен существовать приватный метод void createGame().
2.	В классе MoonLanderGame должен существовать приватный метод void drawScene().
3.	В методе createGame() должен быть вызван метод drawScene().
4.	В методе initialize() должен быть вызван метод createGame().
5.	В методе initialize() вызов метода createGame() происходит после вызова метода setScreenSize(int, int).
6.	В методе drawScene() для каждой ячейки необходимо вызвать метод setCellColor(int, int, Color) с параметрами: координаты ячейки x и y и любой цвет (например, Color.BLACK).


Игра Moon Lander (2/23)

Сегодня мы предлагаем тебе написать увлекательную игру &mdash; Moon Lander. Как всегда, начнем с правил.
Цель &ndash; опустить посадочный модуль на лунную поверхность. Для этого игроку нужно преодолеть притяжение Луны,
используя кормовой ускоритель для замедления падения и боковые ускорители для перемещения корабля влево или вправо.
Рельеф у местности ухабистый, и есть всего одна плоская область для мягкой посадки &mdash; &laquo;платформа&raquo;. Если игрок успешно совершает посадку, он выигрывает.
Количество очков зависит от длительности посадки: чем дольше игрок совершает посадку, тем меньше очков он получит в итоге. Игра окончена, когда игрок разбивается
о поверхность Луны. Итак, начнем с главного класса игры MoonLanderGame. Унаследуем его от класса Game. Этот класс, как ты помнишь, содержит в себе методы,
которые помогут нам в реализации игры.
Теперь реализуем игровое поле. Для этого нам необходимо переопределить метод initialize(), в котором, в свою очередь, нужно вызвать метод setScreenSize(int, int).
Этот метод задает ширину и высоту игрового поля, которые он принимает в качестве параметров. Их будем хранить в переменных.



