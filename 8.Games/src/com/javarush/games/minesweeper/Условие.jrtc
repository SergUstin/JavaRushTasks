taskKey="com.javarush.games.minesweeper.part13"\n\nИгра сапер (13/16)

Игра считается выигранной, когда количество оставшихся закрытых ячеек равно количеству мин. Для подсчета числа
закрытых ячеек введем дополнительную переменную, значение которой изначально равно общему количеству ячеек на
игровом поле. Значение этой переменной будет уменьшаться по мере открытия ячеек. Когда ее значение станет равно
количеству мин, игра будет выиграна.
На данный момент, в нашей игре в случае выигрыша ничего не происходит, а должно бы. Пора это исправить.
Давай напишем метод win(), в котором будем останавливать игру и поздравлять победителя красивым сообщением.

Запусти игру и проверь, что при выигрыше отработал метод win().
Обрати внимание, что метод win() вызывается, если количество закрытых ячеек равно количеству мин на поле.
При этом, если последняя открытая ячейка оказалась миной, то метод не должен быть вызван.


Требования:
1.	В классе MinesweeperGame должно существовать приватное поле countClosedTiles типа int, инициализированное при объявлении значением SIDE * SIDE.
2.	В методе openTile(int, int) значение поля countClosedTiles должно уменьшаться на 1, если элемент матрицы gameField отмечается флагом isOpen.
3.	В классе MinesweeperGame должен существовать приватный метод void win().
4.	Метод win() должен устанавливать значение переменной isGameStopped в true.
5.	Метод win() должен вызывать метод showMessageDialog(Color, String, Color, int).
6.	Метод openTile(int, int) должен вызывать метод win(), если количество не открытых ячеек равно количеству мин на поле, и последняя открытая ячейка не является миной.


Игра сапер (13/16)

Ячейку можно открыть только раз. Если ячейка отмечена флагом, она не должна открываться.
Ну и, конечно же, ячейки не должны открываться после того, как игра была остановлена. Давай учтем все эти моменты
в методе openTile(int, int). Теперь нужно убедиться, что все работает корректно &mdash; запусти игру и проверь.



Игра сапер (13/16)

Практически в любой игре игрок либо выигрывает, либо проигрывает. Давай для начала реализуем проигрыш.
Для этого нам пригодится метод gameOver(), который будет останавливать игру и сообщать игроку о проигрыше.
Для вывода сообщения игроку в движке предусмотрен метод showMessageDialog().
Чтобы контролировать остановку игры, введем специальную переменную-флаг isGameStopped. При каких
обстоятельствах происходит проигрыш? Правильно: при открытии &quot;заминированной&quot; ячейки. Если такое
событие наступило, нужно ячейку с миной перекрасить в красный цвет (Color.RED) и вызвать метод gameOver().
Не забудь учесть остановку игры в методе markTile(int, int). Запусти игру и проверь, что все реализованное
тобой работает.



Игра сапер (13/16)

Теперь давай займемся реализацией метода, который отвечает за маркировку ячейки флажком. Метод назовем markTile.
Он должен:
- отмечать ячейку на игровом поле флагом или снимать флаг;
- следить за количеством флагов;
- заниматься отрисовкой и стиранием флагов на игровом поле;
- менять цвет ячейки поля, если в ней устанавливается флаг и возвращать цвет обратно, если флаг снимается.
Поставить или снять флаг в игре можно с помощью клика правой кнопки мыши. Поэтому в классе MinesweeperGame
нужно переопределить метод onMouseRightClick(int, int) класса Game и в нем вызвать метод markTile(int x, int y).
Проверь, что все работает &mdash; запусти игру.



Игра сапер (13/16)

Согласно правилам игры, при открытии ячейки, количество &quot;заминированных&quot; соседей которой равно нулю,
открывается некоторая &quot;не заминированная&quot; область до ячеек с &quot;заминированными&quot;
соседями. Давай это реализуем... Предлагаю использовать рекурсию. Ее применяют тогда,
когда алгоритм решения задачи совпадает с алгоритмом решения подзадачи (части). У нас как раз такой случай.
При открытии ячейки с нулевым количеством &quot;заминированных&quot; соседей нам нужно сделать полный перебор всех
закрытых соседних ячеек, вызвать у них метод openTile(int, int) и повторить процесс.
Также в методе openTile(int, int) реализуем показ в ячейке количества &quot;заминированных&quot; соседей.
Запусти игру, чтобы проверить корректность реализации.
Подсказка: если получил java.lang.StackOverflowError, значит ты поздно устанавливаешь флаг, что ячейка уже открыта.



Игра сапер (13/16)

Согласно правилам игры, в помощь игроку даются флаги. Они нужны, чтобы
помечать потенциально &quot;заминированные&quot; ячейки. Поэтому количество флагов countFlags должно равняться
количеству мин countMinesOnField. Флаг нужно как-то показывать на игровом поле. Для этого создадим
переменную-константу, которая будет хранить его символ. У каждой ячейки модели должно быть состояние
isFlag, которое покажет нам, помечена ли ячейка флагом или нет.



