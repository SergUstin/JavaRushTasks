taskKey="com.javarush.games.minesweeper.part15"\n\nИгра сапер (15/16)

Как известно, настоящий сапер ошибается только один раз. Но, к счастью, у нас есть право на ошибку, и даже не одну.
Давай реализуем механизм рестарта игры. Для этого создадим метод restart(), в котором будем запускать
игру, сбрасывать в исходное состояние количество закрытых ячеек, мин на поле и
очков. Не забудь об обновлении счета на игровом поле и о вызове метода, который отвечает за создание игры.
Также в методе restart() нужно очистить игровое поле от флагов, мин, чисел и пр. Рестартовать игру
будем по нажатию левой кнопки мыши.


Требования:
1.	В классе MinesweeperGame должен существовать private void метод restart().
2.	Присваивание значения false полю isGameStopped должно происходить в методе restart().
3.	Присваивание значения полю isGameStopped не должно происходить в методе createGame().
4.	В методе restart() должны возвращаться исходные значения полей countClosedTiles, score и countMinesOnField.
5.	Метод restart() должен вызывать метод setScore(int).
6.	Метод restart() должен вызывать метод createGame() после установки исходных значений полей countClosedTiles, score и countMinesOnField.
7.	В методе createGame() игровое поле должно очищаться от всех надписей (флагов, мин, чисел). Используй метод setCellValue(int, int, String). В качестве последнего параметра передай пустую строку.
8.	Метод onMouseLeftClick(int, int) должен вызывать метод restart() и больше ничего не делать, если игра остановлена.


Игра сапер (15/16)

Согласись, без счета играть не очень интересно. Давай добавим этот функционал в нашу игру. Нам понадобится
переменная для учета очков. При открытии ячейки без мины счет увеличивается на 5 очков.
Чтобы счет отображался на игровом поле, нам нужно воспользоваться специальным методом setScore() класса Game,
в который передадим общее количество очков. Обрати внимание, что вызывать этот метод нужно после увеличения счета &mdash;
иначе будет показан неправильный результат.
Запусти игру и попробуй набрать максимальное количество очков.



Игра сапер (15/16)

Игра считается выигранной, когда количество оставшихся закрытых ячеек равно количеству мин. Для подсчета числа
закрытых ячеек введем дополнительную переменную, значение которой изначально равно общему количеству ячеек на
игровом поле. Значение этой переменной будет уменьшаться по мере открытия ячеек. Когда ее значение станет равно
количеству мин, игра будет выиграна.
На данный момент, в нашей игре в случае выигрыша ничего не происходит, а должно бы. Пора это исправить.
Давай напишем метод win(), в котором будем останавливать игру и поздравлять победителя красивым сообщением.

Запусти игру и проверь, что при выигрыше отработал метод win().
Обрати внимание, что метод win() вызывается, если количество закрытых ячеек равно количеству мин на поле.
При этом, если последняя открытая ячейка оказалась миной, то метод не должен быть вызван.



Игра сапер (15/16)

Ячейку можно открыть только раз. Если ячейка отмечена флагом, она не должна открываться.
Ну и, конечно же, ячейки не должны открываться после того, как игра была остановлена. Давай учтем все эти моменты
в методе openTile(int, int). Теперь нужно убедиться, что все работает корректно &mdash; запусти игру и проверь.



Игра сапер (15/16)

Практически в любой игре игрок либо выигрывает, либо проигрывает. Давай для начала реализуем проигрыш.
Для этого нам пригодится метод gameOver(), который будет останавливать игру и сообщать игроку о проигрыше.
Для вывода сообщения игроку в движке предусмотрен метод showMessageDialog().
Чтобы контролировать остановку игры, введем специальную переменную-флаг isGameStopped. При каких
обстоятельствах происходит проигрыш? Правильно: при открытии &quot;заминированной&quot; ячейки. Если такое
событие наступило, нужно ячейку с миной перекрасить в красный цвет (Color.RED) и вызвать метод gameOver().
Не забудь учесть остановку игры в методе markTile(int, int). Запусти игру и проверь, что все реализованное
тобой работает.



Игра сапер (15/16)

Теперь давай займемся реализацией метода, который отвечает за маркировку ячейки флажком. Метод назовем markTile.
Он должен:
- отмечать ячейку на игровом поле флагом или снимать флаг;
- следить за количеством флагов;
- заниматься отрисовкой и стиранием флагов на игровом поле;
- менять цвет ячейки поля, если в ней устанавливается флаг и возвращать цвет обратно, если флаг снимается.
Поставить или снять флаг в игре можно с помощью клика правой кнопки мыши. Поэтому в классе MinesweeperGame
нужно переопределить метод onMouseRightClick(int, int) класса Game и в нем вызвать метод markTile(int x, int y).
Проверь, что все работает &mdash; запусти игру.



