taskKey="com.javarush.games.racer.part27"\n\nИгра Racer (27/28)

Чтобы игрок мог поделиться своими достижениями, введем в игру систему начисления очков.
При старте у игрока есть 3500 очков. На каждом такте игры (40мс) их количество уменьшается на 5, пока игрок не финиширует.
Это мотивирует пройти игру быстрее.


Требования:
1.	В классе RacerGame должно существовать приватное поле score типа int.
2.	Поле score должно быть проинициализировано в методе createGame() значением 3500.
3.	Метод onTurn(int) должен уменьшать значение поля score на пять.
4.	Метод onTurn(int) должен вызвать метод setScore(int) с параметром score после его изменения.
5.	В методе onTurn(int) метод setScore(int) должен быть вызван до метода drawScene().


Игра Racer (27/28)

Победа игрока достигается при пересечении финишной линии.
Для проверки пересечения игроком финишной линии, нужно сравнить его координату y с координатой y финишной линии. Если y игрока меньше y финишной линии, значит линия пересечена.
В классе FinishLine создай отдельный метод isCrossed(PlayerCar) для сравнения y-координат.
Вызывать метод isCrossed(PlayerCar) нужно на каждом шаге игры. При пересечении финишной линии необходимо остановить игру и сообщить игроку о победе.
Реализуй это в методе win().



Игра Racer (27/28)

В этой части добавим панель прогресса в прохождении игры.
Заметь, у тебя появился новый класс ProgressBar. Разберись как он работает и что делает.
Для хранения экземпляра класса ProgressBar понадобится соответствующее поле в основном классе игры,
которое будет инициализироваться при старте новой игры.
Размер панели будет зависеть от количества машин, которые необходимо пройти. Это значение передается в конструктор.

Наша панель будет перерисовываться каждый такт игры, а индикатор на панели будет двигаться в зависимости от количества пройденных машин-препятствий.



Игра Racer (27/28)

Чтобы проверять выполнение условий победы, нам нужно будет знать реальное количество машин, с которыми разминулся игрок.
Для этого создай поле passedCarsCount в классе RoadManager и геттер к нему.
Значение этого поля должно увеличиваться на единицу после прохождения каждой машины-препятствия (удаления машины из списка items).

Сравнивать passedCarsCount и RACE_GOAL_CARS_COUNT будем в методе onTurn(int).
Если значение passedCarsCount больше или равно RACE_GOAL_CARS_COUNT, значит цель достигнута и нужно показать финишную линию.



Игра Racer (27/28)

В этой части реализуем прорисовку и движение финишной линии. Для этого ее экземпляр должен храниться в основном классе игры и пересоздаваться при старте новой игры.
Методы draw(Game) и move(int) экземпляра класса FinishLine, как и у всех объектов, будут вызываться каждые 40мс, но результат их вызова будет игнорироваться до вызова метода show().
Также давай определимся с условиями победы. Чтобы прохождение игры было достаточно сложным и интересным, победа должна наступать после преодоления 40 машин-препятствий.
Будем хранить это значение в константе RACE_GOAL_CARS_COUNT.



Игра Racer (27/28)

Приступим к созданию финишной линии. Матрица для нее уже есть в ShapeMatrix.
Финишная линия появится на трассе в конце игры.
На самом деле объект финишной линии создается в начале игры, но находится выше игрового поля, поэтому невидим.
Как только флаг, ответственный за отображение FinishLine, получит значение true, финишная линия начнет движение вниз и появится на игровом поле.



