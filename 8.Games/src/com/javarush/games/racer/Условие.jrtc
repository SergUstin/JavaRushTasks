taskKey="com.javarush.games.racer.part19"\n\nИгра Racer (19/28)

Кроме шипов, на трассе неплохо бы смотрелись машины разных типов.
Для представления машин на игровом поле создай в пакете road общий для всех типов машин класс Car и унаследуй его от RoadObject.
Все машины будут двигаться со скоростью 1.

Так как метод createRoadObject(RoadObjectType, int, int) класса RoadManager отвечает за создание всех дорожных объектов,
вместо null он должен возвращать новый объект типа Car.
Для генерации новых машин создай метод generateRegularCar(Game game) в классе RoadManager.
Чтобы трасса не была слишком загружена, новая машина должна создаваться с вероятностью 30%.
Тип машины должен быть случайно выбран из первых четырех элементов RoadObjectType.
Не забудь каждую созданную машину добавить в список items.


Требования:
1.	В пакете road должен существовать публичный класс Car.
2.	Класс Car должен быть наследником класса RoadObject.
3.	В классе Car должен существовать публичный конструктор с тремя параметрами: RoadObjectType type, int x, int y, который вызывает конструктор базового класса с параметрами: type, x, y.
4.	В конструкторе класса Car поле speed (поле суперкласса) должно инициализироваться значением 1.
5.	Метод createRoadObject(RoadObjectType, int, int) класса RoadManager должен вернуть новый объект типа Car, если type не равен RoadObjectType.THORN.
6.	В методе createRoadObject(RoadObjectType, int, int) конструктор класса Car должен быть вызван с параметрами: type, x, y (соответствующие параметры метода).
7.	В классе RoadManager должен существовать приватный метод void generateRegularCar(Game).
8.	В методе generateRegularCar(Game game) необходимо у объекта game вызвать метод getRandomNumber(int) с параметром 100.
9.	В методе generateRegularCar(Game game) должна создаваться локальная переменная int carTypeNumber, проинициализированная значением game.getRandomNumber(4).
10.	В методе generateRegularCar(Game game), если метод getRandomNumber(100) вернул меньше 30, необходимо вызвать метод addRoadObject(RoadObjectType, Game) с параметрами: RoadObjectType.values()[carTypeNumber], game.
11.	В методе generateNewRoadObjects(Game) класса RoadManager необходимо вызвать метод generateRegularCar(Game).


Игра Racer (19/28)

После завершения игры должна быть возможность начать заново. Реализуй перезапуск игры по нажатию клавиши SPACE.

Чтобы игрок мог быстрее преодолеть трассу, его машина должна иметь возможность увеличивать скорость.
Реализуй увеличение скорости в 2 раза по нажатию клавиши UP, а при отпускании этой клавиши &mdash; возвращение к начальной скорости.



Игра Racer (19/28)

Игра должна останавливаться в двух случаях: когда игрок выиграл или проиграл. Пока реализуем остановку только для проигрышей.
Для хранения текущего состояния игры создадим поле boolean isGameStopped, начальное состояние которого должно быть false.
Когда игрок сталкивается с препятствием &mdash; он проиграл, а значит игра должна остановиться, а на экран &mdash; вывестись сообщение, например, GAME OVER.
Все действия, которые осуществляются при проигрыше, удобно вынести в отдельный метод gameOver().
В методе onTurn(int) нужно проверять пересечение игрока с препятствиями (метод checkCrush(PlayerCar)).



Игра Racer (19/28)

На данный момент при пересечении с препятствием машина игрока продолжает движение.
В этой части реализуем метод, который будет проверять, столкнулась ли машина с преградой.
При реализации этого метода используй метод isCollision(GameObject) класса GameObject, который мы реализовали вместо тебя. Разберись как он работает.

Столкновение должно быть визуально заметно, то есть необходимо изменить изображение машины игрока.
Для этого в класс PlayerCar добавь метод stop(), который будет устанавливать полю matrix значение ShapeMatrix.PLAYER_DEAD.



Игра Racer (19/28)

Сейчас шипы появляются только один раз (в начале игры). Чтобы генерировались новые шипы, старые нужно удалять из списка items после того,
как они вышли за пределы экрана. Для удаления можно либо использовать итератор, либо создать копию списка items и проходить по ней циклом,
и если объект нужно удалить из списка &mdash; вызывать items.remove(item).



Игра Racer (19/28)

Пришло время отображать шипы на экране.

На трассе должно быть не больше одного объекта Thorn одновременно.
Для проверки этого условия создай метод isThornExists() в классе RoadManager.
Чтобы проверить, является ли объект RoadObject шипами, можно использовать его поле type.

За генерацию шипов будет отвечать отдельный метод void generateThorn(Game).
Он будет проверять, есть ли на дороге шипы, и если их нет &mdash; генерировать новые с вероятностью 10%.

В будущем препятствиями будут не только шипы. Для генерации всех препятствий потребуется метод generateNewRoadObjects(Game),
но пока он будет генерировать только шипы. Он должен вызываться в методе onTurn(int) класса RacerGame.

Также шипы должны передвигаться вместе с трассой в методе moveAll().



