taskKey="com.javarush.games.racer.part20"\n\nИгра Racer (20/28)

Сейчас встречных машин слишком много.
Чтобы игру можно было пройти, промежутки между препятствиями должны быть достаточно большими.
С другой стороны, если они будут слишком большие, игра станет очень простой и не такой интересной.
Оптимальным расстоянием будет 12: оно соответствует габаритам машины игрока с небольшим запасом.
Это значение будем хранить в константе PLAYER_CAR_DISTANCE.

Реализуй метод boolean isRoadSpaceFree(RoadObject object), который будет проверять,
есть ли достаточно свободного места на дороге для размещения новой машины.
В этом тебе поможет метод isCollisionWithDistance(GameObject, int). Этот метод возвращает false,
если расстояние между объектами по горизонтали и вертикали больше переданной дистанции.
Если на дороге есть свободное место, добавляй новую машину в items.


Требования:
1.	В классе RoadManager должно существовать приватное статическое final int поле PLAYER_CAR_DISTANCE, проинициализированное при объявлении значением 12.
2.	В классе RoadManager должен существовать приватный метод boolean isRoadSpaceFree(RoadObject object).
3.	Метод isRoadSpaceFree(RoadObject object) должен вызывать метод isCollisionWithDistance(GameObject, int) у элементов списка items для проверки пересечений объектов. В качестве параметров передавать: object, PLAYER_CAR_DISTANCE.
4.	Метод isRoadSpaceFree(RoadObject) должен возвращать false, если метод isCollisionWithDistance(GameObject, int) с любым из объектов списка items вернул true.
5.	Метод isRoadSpaceFree(RoadObject) должен возвращать true, если метод isCollisionWithDistance(GameObject, int) со всеми объектами из списка items вернул false.
6.	Метод addRoadObject(RoadObjectType, Game) должен вызывать метод isRoadSpaceFree(RoadObject).
7.	Метод addRoadObject(RoadObjectType, Game) должен добавлять созданный методом createRoadObject(RoadObjectType, int, int) объект в список items только в том случае, если метод isRoadSpaceFree(RoadObject) вернул true.


Игра Racer (20/28)

Кроме шипов, на трассе неплохо бы смотрелись машины разных типов.
Для представления машин на игровом поле создай в пакете road общий для всех типов машин класс Car и унаследуй его от RoadObject.
Все машины будут двигаться со скоростью 1.

Так как метод createRoadObject(RoadObjectType, int, int) класса RoadManager отвечает за создание всех дорожных объектов,
вместо null он должен возвращать новый объект типа Car.
Для генерации новых машин создай метод generateRegularCar(Game game) в классе RoadManager.
Чтобы трасса не была слишком загружена, новая машина должна создаваться с вероятностью 30%.
Тип машины должен быть случайно выбран из первых четырех элементов RoadObjectType.
Не забудь каждую созданную машину добавить в список items.



Игра Racer (20/28)

После завершения игры должна быть возможность начать заново. Реализуй перезапуск игры по нажатию клавиши SPACE.

Чтобы игрок мог быстрее преодолеть трассу, его машина должна иметь возможность увеличивать скорость.
Реализуй увеличение скорости в 2 раза по нажатию клавиши UP, а при отпускании этой клавиши &mdash; возвращение к начальной скорости.



Игра Racer (20/28)

Игра должна останавливаться в двух случаях: когда игрок выиграл или проиграл. Пока реализуем остановку только для проигрышей.
Для хранения текущего состояния игры создадим поле boolean isGameStopped, начальное состояние которого должно быть false.
Когда игрок сталкивается с препятствием &mdash; он проиграл, а значит игра должна остановиться, а на экран &mdash; вывестись сообщение, например, GAME OVER.
Все действия, которые осуществляются при проигрыше, удобно вынести в отдельный метод gameOver().
В методе onTurn(int) нужно проверять пересечение игрока с препятствиями (метод checkCrush(PlayerCar)).



Игра Racer (20/28)

На данный момент при пересечении с препятствием машина игрока продолжает движение.
В этой части реализуем метод, который будет проверять, столкнулась ли машина с преградой.
При реализации этого метода используй метод isCollision(GameObject) класса GameObject, который мы реализовали вместо тебя. Разберись как он работает.

Столкновение должно быть визуально заметно, то есть необходимо изменить изображение машины игрока.
Для этого в класс PlayerCar добавь метод stop(), который будет устанавливать полю matrix значение ShapeMatrix.PLAYER_DEAD.



Игра Racer (20/28)

Сейчас шипы появляются только один раз (в начале игры). Чтобы генерировались новые шипы, старые нужно удалять из списка items после того,
как они вышли за пределы экрана. Для удаления можно либо использовать итератор, либо создать копию списка items и проходить по ней циклом,
и если объект нужно удалить из списка &mdash; вызывать items.remove(item).



