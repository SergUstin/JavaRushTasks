taskKey="com.javarush.games.spaceinvaders.part22"\n\nИгра Space Invaders (22/34)

Добавим новое свойство кораблю игрока &mdash; направление движения. Задавать его будем через сеттер. Корабль может
двигаться в двух направлениях &mdash; влево или вправо. Но поскольку он может совсем не двигаться, для этого состояния
будем использовать направление &quot;вверх&quot;. Так как при старте корабль не двигается, установим
направление &quot;вверх&quot; по умолчанию.
Для считывания команд игрока (нажатия клавиш) переопределим метод onKeyPress(Key) класса Game. Этот метод будет
устанавливать соответствующее направление кораблю при нажатии клавиши влево или вправо. Кроме этого реализуем
перезапуск остановленной игры по нажатию клавиши пробел.


Требования:
1.	В классе PlayerShip должно существовать приватное поле direction типа Direction, проинициализированное при объявлении значением Direction.UP.
2.	В классе PlayerShip должен существовать публичный сеттер setDirection(Direction newDirection).
3.	Сеттер setDirection(Direction newDirection) должен устанавливать полю direction значение newDirection, если newDirection не равен Direction.DOWN.
4.	В классе SpaceInvadersGame должен быть переопределен метод onKeyPress(Key) родительского класса Game.
5.	Метод onKeyPress(Key) должен вызывать метод createGame() и больше ничего не делать, если параметр метода &mdash; клавиша SPACE и игра была остановлена (isGameStopped == true).
6.	Метод onKeyPress(Key) должен устанавливать кораблю игрока направление Direction.LEFT, если параметр метода &mdash; клавиша LEFT.
7.	Метод onKeyPress(Key) должен устанавливать кораблю игрока направление Direction.RIGHT, если параметр метода &mdash; клавиша RIGHT.


Игра Space Invaders (22/34)

При проигрыше и выигрыше игра останавливается. Давай реализуем метод stopGame, который будет останавливать игру
и выводить соответствующее сообщение на экран. Тексты сообщений о выигрыше или о проигрыше придумай сам.
Если пуля попала в игрока, перед остановкой игры нужно успеть показать
анимацию взрыва. Для этого в методе stopGameWithDelay будем вызывать метод stopGame с задержкой.
В методе check, если игрок &quot;неживой&quot;, нужно начинать отсчет задержки до остановки игры,
вызвав метод stopGameWithDelay.



Игра Space Invaders (22/34)

Чтобы переключиться на следующий кадр анимации, в классе Ship создадим метод nextFrame. Он устанавливает в поле matrix
следующий кадр анимации, если это возможно. Также расширим функционал метода draw, переопределив его таким образом,
что бы он вызвал метод суперкласса для отрисовки и метод nextFrame для смены кадров анимации.



Игра Space Invaders (22/34)

Реализуем &quot;убийство&quot; игрока, переопределив метод kill(). Помимо установки флага isAlive в состояние false,
он будет добавлять анимацию уничтожения корабля.



Игра Space Invaders (22/34)

На данном этапе мы подготовим анимацию для крушения кораблей. Для этого нам понадобится поле frames типа List&lt;int[][]&gt;,
которое будет хранить список матриц для кадров анимации. Также нам понадобится поле frameIndex, которое хранит индекс
текущего кадра анимации. Передавать кадры анимации мы будем в методе setAnimatedView. Он принимает массив
кадров(матриц) и передает их списку frames. В завершение, реализуем метод setStaticView, который задает изначальную матрицу
для кораблей.



Игра Space Invaders (22/34)

Добавим в класс PlayerShip метод, который проверяет, попали ли вражеские пули в корабль игрока (метод isCollision класса GameObject).
Если было попадание, он &quot;убивает&quot; корабль и пулю. Также добавим корабль игрока в класс игры, отрисуем его и внесем проверку попаданий в соответствующий метод.



