taskKey="com.javarush.games.spaceinvaders.part03"\n\nИгра Space Invaders (3/34)

Давай реализуем метод drawField() &mdash; закрасим игровое поле одним цветом.
Для этого нужно каждой ячейке установить цвет и пустую строку. В этом нам поможет метод
setCellValueEx(int, int, Color, String) класса Game, где первые 2 параметра - координаты x и y ячейки,
третий - цвет фона, а последний - значение ячейки, которое должно отображаться на игровом поле.
Список доступных цветов ты найдешь в enum com.javarush.engine.cell.Color игрового движка.
Значение ячейки устанавливать не нужно, поэтому передадим пустую строку.
Например, чтобы раскрасить ячейку с координатами x = 0 и y = 2 в черный цвет, нужно вызвать метод:
setCellValueEx(0, 2, Color.BLACK, &quot;&quot;).
Чтобы закрасить не одну ячейку, а все - нам нужно взять каждую строку (по одной) игрового поля,
пройтись по каждой ячейке строки и установить ей цвет и значение.
В этом нам помогут циклы. Пример:
for (int y = 0; y &lt; &quot;высота игрового поля&quot;; y++) {
for (int x = 0; x &lt; &quot;ширина игрового поля&quot;; x++) {
setCellValueEx(x, y, Color.BLACK, &quot;&quot;);
}
}

Поскольку в игре будут задействованы разные игровые объекты, их общие характеристики, такие как
координаты положения на игровом поле, будут описаны в родительском классе GameObject. Для классов
всех игровых объектов создадим отдельный пакет gameobjects.

Первыми игровыми объектами будут звезды. Для их описания создадим класс Star в пакете gameobjects и
унаследуем его от класса GameObject.


Требования:
1.	В методе drawField() необходимо вызвать для всех ячеек отображения метод setCellValueEx(int, int, Color, String) с параметрами: координаты x и y, любой цвет (например, Color.BLACK) и пустую строку.
2.	В пакете gameobjects в отдельном файле должен существовать публичный класс GameObject.
3.	В классе GameObject должно существовать публичное поле x типа double.
4.	В классе GameObject должно существовать публичное поле y типа double.
5.	В классе GameObject должен существовать публичный конструктор с двумя параметрами типа double, который устанавливает соответствующие значения полям x и y.
6.	В пакете gameobjects в отдельном файле должен существовать публичный класс Star.
7.	Класс Star должен быть наследником класса GameObject.
8.	В классе Star должен существовать публичный конструктор с двумя параметрами типа double, который вызывает конструктор базового класса с этими же параметрами.


Игра Space Invaders (3/34)

Все игровые действия происходят в космосе. Для его отрисовки объявим метод drawField().
Создавать все элементы игры будем в методе createGame(), а отрисовывать их &mdash; в методе drawScene().
Все объекты создаются при запуске игры, поэтому в методе initialize() вызовем
setScreenSize(int, int), а после него &mdash; метод createGame().



Игра Space Invaders (3/34)

Сегодня мы предлагаем тебе написать увлекательную игру &mdash; Space Invaders. Как всегда, начнем с правил.

Цель игры: игроку нужно уничтожить все корабли инопланетян.

Игрок управляет лазерной пушкой, передвигая её горизонтально, в нижней части экрана.
У игрока есть бесконечное количество &quot;патронов&quot;. Попадая в инопланетный корабль, игрок убивает его и получает за это очки.
На старте игры корабли инопланетян находятся в верхней части экрана. Они движутся по горизонтали и, достигая края
игрового поля, опускаются на ряд ниже, постепенно приближаясь к игроку.
По мере того, как кораблей инопланетян становится меньше, их скорость движения увеличивается.
После разгрома всех врагов игроку засчитывается победа.
Инопланетяне пытаются уничтожить пушку, стреляя по ней. Если инопланетяне попадают в пушку, игрок терпит поражение.
Если хотя бы один из противников достигает нижней части экрана, происходит инопланетный захват, и игра также заканчивается.
Выше рядов с кораблями противника находится &quot;босс&quot;. Если игрок уничтожит его, он получит бонусные очки.

Итак, начнем. Для начала нам понадобится класс игры SpaceInvadersGame, который наследует класс Game. Он содержит методы,
которые помогут нам в реализации игры. Теперь зададим игровое поле. Для запуска игры нам необходимо переопределить
метод initialize(), в котором, в свою очередь, нужно вызвать метод setScreenSize(int, int).
Этот метод задает ширину и высоту игрового поля, которые он принимает в качестве параметров. Их будем хранить в переменных.
Чтобы успешно справиться с задачей Space Invaders, рекомендуем прочесть статью про раздел &quot;Игры&quot;. В ней ты найдешь информацию,
которая будет полезна при написании игр.



