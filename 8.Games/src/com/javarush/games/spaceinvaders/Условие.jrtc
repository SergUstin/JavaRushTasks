taskKey="com.javarush.games.spaceinvaders.part32"\n\nИгра Space Invaders (32/34)

Игра проиграна не только если корабль игрока уничтожен, но и когда вражеский флот вплотную
приблизился к кораблю игрока. Чтобы определить координаты нижней границы вражеского флота,
добавим метод getBottomBorder().
После разгрома всех врагов игрок побеждает. Для удобства добавим метод getShipsCount(), который будет возвращать
количество оставшихся кораблей вражеского флота. Если количество равно 0, нужно вызвать метод stopGameWithDelay() и
win() у объекта playerShip, который поменяет матрицу корабля игрока на ShapeMatrix.WIN_PLAYER.
Проверку количества оставшихся вражеских кораблей и достижения ими корабля игрока выполним в методе check().


Требования:
1.	В классе EnemyFleet должен существовать публичный метод double getBottomBorder().
2.	Метод getBottomBorder() должен возвращать максимальное из значений (y + height) среди всех вражеских кораблей из списка ships.
3.	В классе EnemyFleet должен существовать публичный метод int getShipsCount().
4.	Метод getShipsCount() должен возвращать количество вражеских кораблей в списке ships.
5.	В классе PlayerShip должен существовать публичный метод void win().
6.	В методе win() класса PlayerShip необходимо вызвать метод setStaticView(int[][]). В качестве параметра передай ShapeMatrix.WIN_PLAYER.
7.	В методе check() класса SpaceInvadersGame необходимо вызвать метод getBottomBorder() у объекта enemyFleet.
8.	Если результат вызова метода getBottomBorder() больше либо равен playerShip.y, в методе check() необходимо вызвать метод kill() у объекта playerShip.
9.	В методе check() класса SpaceInvadersGame необходимо вызвать метод getShipsCount() у объекта enemyFleet.
10.	Если результат вызова метода getShipsCount() равен 0, в методе check() необходимо вызвать метод win() у объекта playerShip и метод stopGameWithDelay() класса SpaceInvadersGame.


Игра Space Invaders (32/34)

Давай сделаем так, чтобы анимация босса была постоянной. Для этого нам нужно добавить в метод setAnimatedView
параметр isLoopAnimation, отвечающий за бесконечность анимации. Этот параметр устанавливает соответствующее
значение полю loopAnimation. Если значение поля loopAnimation равно true, метод nextFrame повторяет кадры, сбрасывая
frameIndex. Вледствие этого нужно отрефакторить параметры в
местах вызова метода setAnimatedView.



Игра Space Invaders (32/34)

Сейчас научим босса стрелять. В зависимости от кадра анимации, босс будет стрелять из разных пушек.
Также переопределим метод kill(), в котором установим значение поля isAlive и зададим кадры анимации взрыва.



Игра Space Invaders (32/34)

Пришло время создать главаря врагов. Чтобы он выглядел эффектнее, добавим анимацию при движении. Если менять анимацию каждый
такт, его движения будут казаться слишком быстрыми. Чтобы они выглядели нормально, нужно менять кадр один раз в 10 тактов. Именно поэтому
нам нужно переопределить метод nextFrame и добавить переменную frameCount, которая будет вести отсчет тактов.



Игра Space Invaders (32/34)

На данном этапе добавим метод verifyHit(List&lt;Bullet&gt; bullets) для проверки попаданий пуль игрока во вражеские корабли.
После попадания нам нужно &quot;убить&quot; соответствующие пулю и вражеский корабль. Кроме этого, добавим метод
deleteHiddenShips(), который будет удалять из списка &quot;невидимые&quot; корабли. Для удаления можно либо использовать итератор,
либо создать копию списка ships и проходить по ней циклом. Если в результате проверки объект нужно удалить из списка &mdash; вызывать ships.remove(ship).
Методы verifyHit(List&lt;Bullet&gt; bullets) и deleteHiddenShips() нужно вызвать в методе check() класса SpaceInvadersGame.



Игра Space Invaders (32/34)

Переопределим метод уничтожения для вражеского корабля. Он устанавливает значение false полю isAlive
и задает матрицы для анимации уничтожения. Также создадим в классе Ship метод isVisible().
Он будет возвращать false после того, как у &quot;неживого&quot; корабля отобразится вся анимация.



