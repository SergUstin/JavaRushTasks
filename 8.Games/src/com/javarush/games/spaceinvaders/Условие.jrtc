taskKey="com.javarush.games.spaceinvaders.part30"\n\nИгра Space Invaders (30/34)

Сейчас научим босса стрелять. В зависимости от кадра анимации, босс будет стрелять из разных пушек.
Также переопределим метод kill(), в котором установим значение поля isAlive и зададим кадры анимации взрыва.


Требования:
1.	В классе Boss должен быть переопределен метод fire() родительского класса EnemyShip.
2.	Метод fire() должен вернуть null, если босс &quot;неживой&quot;.
3.	Метод fire() должен вернуть новый объект типа Bullet.
4.	В методе fire() нужно вызвать конструктор класса Bullet с параметрами: x + 6, y + height, Direction.DOWN, если matrix == ShapeMatrix.BOSS_ANIMATION_FIRST.
5.	В методе fire() нужно вызвать конструктор класса Bullet с параметрами: x, y + height, Direction.DOWN, если matrix != ShapeMatrix.BOSS_ANIMATION_FIRST.
6.	В классе Boss должен быть переопределен метод kill() родительского класса EnemyShip.
7.	Метод kill() не должен ничего делать, если босс &quot;неживой&quot;.
8.	В методе kill() полю isAlive необходимо установить значение false.
9.	В методе kill() необходимо вызвать метод базового класса setAnimatedView(int[][]...) с параметрами: ShapeMatrix.KILL_BOSS_ANIMATION_FIRST, ShapeMatrix.KILL_BOSS_ANIMATION_SECOND, ShapeMatrix.KILL_BOSS_ANIMATION_THIRD.


Игра Space Invaders (30/34)

Пришло время создать главаря врагов. Чтобы он выглядел эффектнее, добавим анимацию при движении. Если менять анимацию каждый
такт, его движения будут казаться слишком быстрыми. Чтобы они выглядели нормально, нужно менять кадр один раз в 10 тактов. Именно поэтому
нам нужно переопределить метод nextFrame и добавить переменную frameCount, которая будет вести отсчет тактов.



Игра Space Invaders (30/34)

На данном этапе добавим метод verifyHit(List&lt;Bullet&gt; bullets) для проверки попаданий пуль игрока во вражеские корабли.
После попадания нам нужно &quot;убить&quot; соответствующие пулю и вражеский корабль. Кроме этого, добавим метод
deleteHiddenShips(), который будет удалять из списка &quot;невидимые&quot; корабли. Для удаления можно либо использовать итератор,
либо создать копию списка ships и проходить по ней циклом. Если в результате проверки объект нужно удалить из списка &mdash; вызывать ships.remove(ship).
Методы verifyHit(List&lt;Bullet&gt; bullets) и deleteHiddenShips() нужно вызвать в методе check() класса SpaceInvadersGame.



Игра Space Invaders (30/34)

Переопределим метод уничтожения для вражеского корабля. Он устанавливает значение false полю isAlive
и задает матрицы для анимации уничтожения. Также создадим в классе Ship метод isVisible().
Он будет возвращать false после того, как у &quot;неживого&quot; корабля отобразится вся анимация.



Игра Space Invaders (30/34)

В этой части добавим возможность стрелять по нажатию клавиши пробел. Новосозданные пули игрока добавляются
в список playerBullets, а те, которые вылетают за пределы игрового поля, удаляются из него.
Для удаления можно либо использовать итератор, либо создать копию списка playerBullets
и проходить по ней циклом. Если в результате проверки объект нужно удалить из списка &mdash; вызывать playerBullets.remove(bullet).
Также ограничим максимальное количество пуль игрока на экране, чтобы немного усложнить игру. Для удобства вынесем
это количество в переменную. Переопределим метод setCellValueEx класса Game так, чтобы он работал только
с валидными координатами.



Игра Space Invaders (30/34)

Сейчас подготовим возможность стрельбы для игрока. Для этого нам нужен метод fire, который будет создавать пули. Хранить их
будем в списке playerBullets. Добавь отрисовку пуль в метод drawScene, а их движение &mdash; в метод moveSpaceObjects.
Осталось только реализовать выстрел по нажатию клавиши. Этим мы займемся в следующей части.



