taskKey="com.javarush.games.spaceinvaders.part28"\n\nИгра Space Invaders (28/34)

На данном этапе добавим метод verifyHit(List&lt;Bullet&gt; bullets) для проверки попаданий пуль игрока во вражеские корабли.
После попадания нам нужно &quot;убить&quot; соответствующие пулю и вражеский корабль. Кроме этого, добавим метод
deleteHiddenShips(), который будет удалять из списка &quot;невидимые&quot; корабли. Для удаления можно либо использовать итератор,
либо создать копию списка ships и проходить по ней циклом. Если в результате проверки объект нужно удалить из списка &mdash; вызывать ships.remove(ship).
Методы verifyHit(List&lt;Bullet&gt; bullets) и deleteHiddenShips() нужно вызвать в методе check() класса SpaceInvadersGame.


Требования:
1.	В классе EnemyFleet должен существовать публичный метод void verifyHit(List&lt;Bullet&gt; bullets).
2.	В методе verifyHit(List&lt;Bullet&gt; bullets) необходимо проверить пересечение каждого вражеского корабля из списка ships с каждой пулей из списка bullets, используя метод isCollision(GameObject).
3.	Если пересечение корабля и пули есть (метод isCollision(GameObject) вернул true) и этот корабль &quot;жив&quot; и эта пуля &quot;живая&quot;, необходимо вызвать вызвать у них метод kill().
4.	В классе EnemyFleet должен существовать публичный метод void deleteHiddenShips().
5.	Метод deleteHiddenShips() должен удалять из списка ships все не видимые на игровом поле корабли (ship.isVisible() == false).
6.	В методе check() класса SpaceInvadersGame у объекта enemyFleet необходимо вызвать метод verifyHit(List&lt;Bullet&gt;) с параметром playerBullets до метода removeDeadBullets().
7.	В методе check() класса SpaceInvadersGame у объекта enemyFleet необходимо вызвать метод deleteHiddenShips() после метода verifyHit(List&lt;Bullet&gt;).


Игра Space Invaders (28/34)

Переопределим метод уничтожения для вражеского корабля. Он устанавливает значение false полю isAlive
и задает матрицы для анимации уничтожения. Также создадим в классе Ship метод isVisible().
Он будет возвращать false после того, как у &quot;неживого&quot; корабля отобразится вся анимация.



Игра Space Invaders (28/34)

В этой части добавим возможность стрелять по нажатию клавиши пробел. Новосозданные пули игрока добавляются
в список playerBullets, а те, которые вылетают за пределы игрового поля, удаляются из него.
Для удаления можно либо использовать итератор, либо создать копию списка playerBullets
и проходить по ней циклом. Если в результате проверки объект нужно удалить из списка &mdash; вызывать playerBullets.remove(bullet).
Также ограничим максимальное количество пуль игрока на экране, чтобы немного усложнить игру. Для удобства вынесем
это количество в переменную. Переопределим метод setCellValueEx класса Game так, чтобы он работал только
с валидными координатами.



Игра Space Invaders (28/34)

Сейчас подготовим возможность стрельбы для игрока. Для этого нам нужен метод fire, который будет создавать пули. Хранить их
будем в списке playerBullets. Добавь отрисовку пуль в метод drawScene, а их движение &mdash; в метод moveSpaceObjects.
Осталось только реализовать выстрел по нажатию клавиши. Этим мы займемся в следующей части.



Игра Space Invaders (28/34)

Когда ты отпускаешь клавиши влево или вправо, корабль игрока не прекращает движение, пока не дойдет до края
игрового поля. Давай это исправим. Переопределим метод onKeyReleased(Key) класса Game. Этот метод вызывается при
отпускании клавиш. Если корабль игрока движется, в результате работы метода onKeyReleased(Key) состояние поля direction
у игрока изменится на Direction.UP и, как следствие, корабль прекратит движение.



Игра Space Invaders (28/34)

В этой части реализуем движение корабля игрока. Учти, что корабль не должен выходить
за пределы игрового поля. Чтобы корабль двигался вместе со всеми остальными объектами, необходимо вызывать метод
move() в методе moveSpaceObjects() главного класса игры.



