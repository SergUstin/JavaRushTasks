taskKey="com.javarush.games.spaceinvaders.part33"\n\nИгра Space Invaders (33/34)

На данном этапе мы добавим в игру счет очков. За обычный корабль начислять будем 15 очков, а за босса &mdash; 100.
Для подсчета очков удобнее всего использовать метод verifyHit, немного доработав его. Чтобы вести общий счет,
добавим переменную score в класс SpaceInvadersGame. Будем выводить ее на экран с помощью метода setScore
класса Game.


Требования:
1.	В классе EnemyShip должно существовать публичное поле score типа int, проинициализированное при объявлении значением 15.
2.	В конструкторе класса Boss необходимо установить полю score значение 100.
3.	В классе EnemyFleet должен существовать публичный метод int verifyHit(List&lt;Bullet&gt; bullets).
4.	В классе EnemyFleet не должен существовать публичный метод void verifyHit(List&lt;Bullet&gt; bullets).
5.	Метод verifyHit(List&lt;Bullet&gt; bullets) должен возвращать 0, если список bullets пустой.
6.	Метод verifyHit(List&lt;Bullet&gt; bullets) должен возвращать сумму значений полей score всех объектов из списка ships, для которых был вызван метод kill().
7.	В классе SpaceInvadersGame должно существовать приватное поле score типа int.
8.	Поле score должно быть проинициализировано в методе createGame() значением 0.
9.	Метод onTurn(int) должен вызвать метод setScore(int) с параметром score.
10.	В методе onTurn(int) метод setScore(int) должен быть вызван до метода drawScene().
11.	В методе check() значение поля score должно быть увеличено на результат, который вернул вызов метода verifyHit(List&lt;Bullet&gt;) у объекта enemyFleet.


Игра Space Invaders (33/34)

Игра проиграна не только если корабль игрока уничтожен, но и когда вражеский флот вплотную
приблизился к кораблю игрока. Чтобы определить координаты нижней границы вражеского флота,
добавим метод getBottomBorder().
После разгрома всех врагов игрок побеждает. Для удобства добавим метод getShipsCount(), который будет возвращать
количество оставшихся кораблей вражеского флота. Если количество равно 0, нужно вызвать метод stopGameWithDelay() и
win() у объекта playerShip, который поменяет матрицу корабля игрока на ShapeMatrix.WIN_PLAYER.
Проверку количества оставшихся вражеских кораблей и достижения ими корабля игрока выполним в методе check().



Игра Space Invaders (33/34)

Давай сделаем так, чтобы анимация босса была постоянной. Для этого нам нужно добавить в метод setAnimatedView
параметр isLoopAnimation, отвечающий за бесконечность анимации. Этот параметр устанавливает соответствующее
значение полю loopAnimation. Если значение поля loopAnimation равно true, метод nextFrame повторяет кадры, сбрасывая
frameIndex. Вледствие этого нужно отрефакторить параметры в
местах вызова метода setAnimatedView.



Игра Space Invaders (33/34)

Сейчас научим босса стрелять. В зависимости от кадра анимации, босс будет стрелять из разных пушек.
Также переопределим метод kill(), в котором установим значение поля isAlive и зададим кадры анимации взрыва.



Игра Space Invaders (33/34)

Пришло время создать главаря врагов. Чтобы он выглядел эффектнее, добавим анимацию при движении. Если менять анимацию каждый
такт, его движения будут казаться слишком быстрыми. Чтобы они выглядели нормально, нужно менять кадр один раз в 10 тактов. Именно поэтому
нам нужно переопределить метод nextFrame и добавить переменную frameCount, которая будет вести отсчет тактов.



Игра Space Invaders (33/34)

На данном этапе добавим метод verifyHit(List&lt;Bullet&gt; bullets) для проверки попаданий пуль игрока во вражеские корабли.
После попадания нам нужно &quot;убить&quot; соответствующие пулю и вражеский корабль. Кроме этого, добавим метод
deleteHiddenShips(), который будет удалять из списка &quot;невидимые&quot; корабли. Для удаления можно либо использовать итератор,
либо создать копию списка ships и проходить по ней циклом. Если в результате проверки объект нужно удалить из списка &mdash; вызывать ships.remove(ship).
Методы verifyHit(List&lt;Bullet&gt; bullets) и deleteHiddenShips() нужно вызвать в методе check() класса SpaceInvadersGame.



