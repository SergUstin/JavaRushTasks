taskKey="com.javarush.games.spaceinvaders.part26"\n\nИгра Space Invaders (26/34)

В этой части добавим возможность стрелять по нажатию клавиши пробел. Новосозданные пули игрока добавляются
в список playerBullets, а те, которые вылетают за пределы игрового поля, удаляются из него.
Для удаления можно либо использовать итератор, либо создать копию списка playerBullets
и проходить по ней циклом. Если в результате проверки объект нужно удалить из списка &mdash; вызывать playerBullets.remove(bullet).
Также ограничим максимальное количество пуль игрока на экране, чтобы немного усложнить игру. Для удобства вынесем
это количество в переменную. Переопределим метод setCellValueEx класса Game так, чтобы он работал только
с валидными координатами.


Требования:
1.	В классе SpaceInvadersGame должно существовать приватное статическое final int поле PLAYER_BULLETS_MAX, проинициализированное при объявлении значением 1.
2.	Метод onKeyPress(Key) класса SpaceInvadersGame должен вызывать метод fire() у корабля игрока, если параметр метода &mdash; клавиша SPACE.
3.	Если метод fire() вернул не null и количество объектов в списке playerBullets меньше PLAYER_BULLETS_MAX, необходимо добавить объект, который вернул метод fire(), в список playerBullets.
4.	В методе removeDeadBullets() класса SpaceInvadersGame необходимо удалить все пули из списка playerBullets, если пуля &quot;неживая&quot; ИЛИ сумма координаты y и поля height пули меньше нуля.
5.	В классе SpaceInvadersGame должен быть переопределен метод setCellValueEx(int, int, Color, String) родительского класса Game.
6.	Метод setCellValueEx(int x, int y, Color, String) не должен ничего делать, если параметры метода x или y находятся вне поля.
7.	Метод setCellValueEx(int, int, Color, String) должен вызывать метод родительского класса, используя ключевое слово super.


Игра Space Invaders (26/34)

Сейчас подготовим возможность стрельбы для игрока. Для этого нам нужен метод fire, который будет создавать пули. Хранить их
будем в списке playerBullets. Добавь отрисовку пуль в метод drawScene, а их движение &mdash; в метод moveSpaceObjects.
Осталось только реализовать выстрел по нажатию клавиши. Этим мы займемся в следующей части.



Игра Space Invaders (26/34)

Когда ты отпускаешь клавиши влево или вправо, корабль игрока не прекращает движение, пока не дойдет до края
игрового поля. Давай это исправим. Переопределим метод onKeyReleased(Key) класса Game. Этот метод вызывается при
отпускании клавиш. Если корабль игрока движется, в результате работы метода onKeyReleased(Key) состояние поля direction
у игрока изменится на Direction.UP и, как следствие, корабль прекратит движение.



Игра Space Invaders (26/34)

В этой части реализуем движение корабля игрока. Учти, что корабль не должен выходить
за пределы игрового поля. Чтобы корабль двигался вместе со всеми остальными объектами, необходимо вызывать метод
move() в методе moveSpaceObjects() главного класса игры.



Игра Space Invaders (26/34)

Добавим новое свойство кораблю игрока &mdash; направление движения. Задавать его будем через сеттер. Корабль может
двигаться в двух направлениях &mdash; влево или вправо. Но поскольку он может совсем не двигаться, для этого состояния
будем использовать направление &quot;вверх&quot;. Так как при старте корабль не двигается, установим
направление &quot;вверх&quot; по умолчанию.
Для считывания команд игрока (нажатия клавиш) переопределим метод onKeyPress(Key) класса Game. Этот метод будет
устанавливать соответствующее направление кораблю при нажатии клавиши влево или вправо. Кроме этого реализуем
перезапуск остановленной игры по нажатию клавиши пробел.



Игра Space Invaders (26/34)

При проигрыше и выигрыше игра останавливается. Давай реализуем метод stopGame, который будет останавливать игру
и выводить соответствующее сообщение на экран. Тексты сообщений о выигрыше или о проигрыше придумай сам.
Если пуля попала в игрока, перед остановкой игры нужно успеть показать
анимацию взрыва. Для этого в методе stopGameWithDelay будем вызывать метод stopGame с задержкой.
В методе check, если игрок &quot;неживой&quot;, нужно начинать отсчет задержки до остановки игры,
вызвав метод stopGameWithDelay.



